<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.moruke.wall.identity.authentication.dao.mapper.CredentialMapper">
  <resultMap id="BaseResultMap" type="com.github.moruke.wall.identity.authentication.dao.entity.Credential">
    <!--@mbg.generated-->
    <!--@Table credential-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="meta" jdbcType="LONGVARCHAR" property="meta" />
    <result column="data" jdbcType="LONGVARCHAR" property="data" />
    <result column="subject_id" jdbcType="VARCHAR" property="subjectId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="mender" jdbcType="BIGINT" property="mender" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, salt, meta, `data`, subject_id, `type`, `status`, create_time, modify_time, creator, 
    mender
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from credential
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from credential
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.moruke.wall.identity.authentication.dao.entity.Credential" useGeneratedKeys="true">
      <!--@mbg.generated-->
      insert into credential (salt, meta, `data`,
                              subject_id, `type`, `status`, creator,
                              mender)
      values (#{salt,jdbcType=VARCHAR}, #{meta,jdbcType=LONGVARCHAR}, #{data,jdbcType=LONGVARCHAR},
              #{subjectId,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
              #{creator,jdbcType=BIGINT},
              #{mender,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.github.moruke.wall.identity.authentication.dao.entity.Credential" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into credential
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salt != null">
        salt,
      </if>
      <if test="meta != null">
        meta,
      </if>
      <if test="data != null">
        `data`,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="mender != null">
        mender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="mender != null">
        #{mender,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.moruke.wall.identity.authentication.dao.entity.Credential">
    <!--@mbg.generated-->
    update credential
    <set>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="mender != null">
        mender = #{mender,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.moruke.wall.identity.authentication.dao.entity.Credential">
    <!--@mbg.generated-->
    update credential
    set salt = #{salt,jdbcType=VARCHAR},
      meta = #{meta,jdbcType=LONGVARCHAR},
      `data` = #{data,jdbcType=LONGVARCHAR},
      subject_id = #{subjectId,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=BIGINT},
      mender = #{mender,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into credential
    (salt, meta, `data`, subject_id, `type`, `status`, create_time, modify_time, creator, 
      mender)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.salt,jdbcType=VARCHAR}, #{item.meta,jdbcType=LONGVARCHAR}, #{item.data,jdbcType=LONGVARCHAR}, 
        #{item.subjectId,jdbcType=VARCHAR}, #{item.type,jdbcType=TINYINT}, #{item.status,jdbcType=TINYINT}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifyTime,jdbcType=TIMESTAMP}, #{item.creator,jdbcType=BIGINT}, 
        #{item.mender,jdbcType=BIGINT})
    </foreach>
  </insert>

  <select id="selectByTypeUIdAndData" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from credential
    where `type` = #{type,jdbcType=TINYINT}
    and subject_id = #{subjectId,jdbcType=VARCHAR}
    and `data` = #{data,jdbcType=LONGVARCHAR}
    </select>

  <select id="selectBySubjectId" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from credential
    where subject_id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>